month
month <- strftime(jcpd$time_received, "%m")
month
month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(month)
jcpd$month
call_month <- strftime(jcpd$time_received, "%m")
jcpd[, -24]
View(jcpd)
jcpd <- jcpd[, -24]
View(jcpd)
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
ggplot(jcpd, aes(x = num_call)) +
geom_line()
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
ggplot(jcpd, aes(x = num_call)) +
geom_point()
num_call
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
ggplot(num_call, aes(x = call_month)) +
geom_point()
num_call
summary(num_call)
table(num_call)
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
ggplot(num_call, aes(x = call_month, y = count(call_month))) +
geom_point()
count(call_month)
library(dplyr)
library(ggplot2)
ggplot(jcpd, aes(x = dispatch_duration)) +
geom_histogram(bins = 50, col = "black") +
scale_y_log10() +
xlab("Dispath_Duration") +
ggtitle("Histogram of dispatch_duration")
ggplot(num_call, aes(x = call_month) +
geom_line()
geom_line()
ggplot(num_call, aes(x = call_month)) +
geom_line()
table(jcpd$call_month)
ggplot(num_call, aes(x = call_month, y = number)) +
geom_line()
ggplot(num_call, aes(x = call_month)) +
geom_line()
table(jcpd$call_month)
as.data.frame(table(jcpd$call_month))
count <- jcpd %>%
group_by(call_type)
ggplot(count, aes(x = call_type)) +
geom_line(col = "black")
count <- jcpd %>%
group_by(call_type)
ggplot(count, aes(x = call_type)) +
geom_bar(col = "black")
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
ggplot(num_call, aes(x = call_month)) +
geom_bar()
colnames(jcpd)
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
num_call <- jcpd %>%
group_by(call_month)
# ggplot(num_call, aes(x = call_month)) +
#   geom_bar()
# made line 跑不了，只有bar能计算频数
table <- as.data.frame(table(jcpd$call_month))
ggplot(table, aes(x = Var1, y = Freq)) +
geom_line()
table <- as.data.frame(table(jcpd$call_month))
ggplot(table, aes(x = Var1, y = Freq, group = 1)) +
geom_line()
ggplot(table, aes(x = Var1, y = Freq, group = 1)) +
geom_line() +
xlab("Month") +
ylab("Frequency") +
ggtitle("number of calls by month")
v <- c(1, 2, 3)
sum(v)
sum(table[2])
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(sum = sum(dispatch_duration))
count_sum
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(sum = sum(dispatch_duration))
ggplot(count_sum, aes(x = call_type, y = sum)) +
geom_boxplot()
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(dispatch_duration)
ggplot(count_sum, aes(x = call_type, y = sum)) +
geom_boxplot()
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(dispatch_duration)
ggplot(count_sum, aes(x = call_type, y = dispatch_duration)) +
geom_boxplot()
ggplot(count_sum, aes(x = dispatch_duration, y = call_type)) +
geom_boxplot()
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(dispatch_duration)
ggplot(jcpd, aes(x = dispatch_duration, y = call_type)) +
geom_boxplot()
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(dispatch_duration)
ggplot(count_sum, aes(x = dispatch_duration, y = call_type)) +
geom_boxplot()
ggplot(count_sum, aes(x = dispatch_duration, y = call_type)) +
geom_boxplot() +
ggtitle("Box plot of dispatch duration by call type")
library("nycflights13")
install.packages("nycflights13")
library("nycflights13")
nycflights13
library(nycflights13)
nycflights13::planes
planes
planes
colnames(planes)
colnames(flights)
nycflights13::airlines
colnames(flights)
colnames(airlines)
nycflights13::airlines
colnames(nycflights13::airlines)
flights_with_names <- inner_join(nycflights13::airlines, nycflights13::flights, by = "carrier")
flights_with_names
which(is.na(flights_with_names))
count(which(is.na(flights_with_names)))
flights_with_names <- full_join(nycflights13::airlines, nycflights13::flights, by = "carrier")
flights_with_names <- full_join(nycflights13::airlines, nycflights13::flights, by = "carrier")
flights_with_names
colnames(airports)
colnames(flights_with_names)
c <- colnames(airports) == colnames(flights_with_names)
colnames(planes)
colnames(airlines)
colnames(weather)
name <- data.frame(
a = colnames(planes),
b = colnames(flights),
c = colnames(airlines),
d = colnames(airports),
)
name <- data.frame(
a = colnames(planes),
b = colnames(flights),
c = colnames(airlines),
d = colnames(airports),
e = colnames(weather)
)
？merge
?merge
a = colnames(planes),
b = colnames(flights),
c = colnames(airlines),
d = colnames(airports),
e = colnames(weather)
a <- colnames(planes)
b <- colnames(flights)
c <- colnames(airlines)
d <- colnames(airports)
e <- colnames(weather)
feiji <- merge(a, b, all = T)
feiji
feiji <- merge(a, b, all = F)
feiji
flights <- flights
airports
flights_with_names
planes
flights_with_names
airports
weather
airlines
flight
flights
airports
planes
weather
unique(airlines$name)
unique(airports$name)
flights_latlon <- flights %>%
inner_join(select(airports, origin = faa, origin_lat = lat, origin_lon = lon),
by = "origin"
) %>%
inner_join(select(airports, dest = faa, dest_lat = lat, dest_lon = lon),
by = "dest"
)
colnames(flights_latlon)
airports
flights
airports <- airports
View(airports)
?select
?select
flights_with_names
airports
tail(airports)
flights_latlon <- flights %>%
inner_join(select(airports, origin = faa, origin_lat = lat, origin_lon = lon),
by = "origin"
)
flights_latlon
colnames(flights_latlon)
join_lat_lon <- flights_with_names %>%
inner_join(select(airports, faa = origin))
join_lat_lon <- flights_with_names %>%
inner_join(select(airports, faa = origin), by = "origin")
join_lat_lon <- flights_with_names %>%
inner_join(select(airports, origin = faa), by = "origin")
Compare(join_lat_lon, flights_with_names)
join_lat_lon <- flights_with_names %>%
left_join(flights_with_names, airports, by = c("faa" = "origin"))
join_lat_lon <- flights_with_names %>%
left_join(flights_with_names, airports, by = c("origin" = "faa"))
join_lat_lon <- flights_with_names %>%
left_join(flights_with_names, airports, by = c("origin" = "faa"))
join_lat_lon <- flights_with_names %>%
inner_join(flights_with_names, airports, by = c("origin" = "faa"))
join_lat_lon <- flights_with_names %>%
inner_join(airports, by = c("origin" = "faa"))
colnames(join_lat_lon)
colnames(flights_with_names)
dat[, colnames(flights_with_names)]
join_lat_lon[, colnames(flights_with_names)]
colnames(join_lat_lon)
join_lat_lon <- flights_with_names %>%
left_join(airports, by = c("origin" = "faa"))
join_lat_lon[, colnames(flights_with_names)]
join_lat_lon <- flights_with_names %>%
full_join(airports, by = c("origin" = "faa"))
join_lat_lon <- flights_with_names %>%
join_lat_lon <- flights_with_names %>%
full_join(airports, by = c("origin" = "faa"))
join_lat_lon <- flights_with_names %>%
full_join(airports, by = c("origin" = "faa"))
join_lat_lon[, colnames(flights_with_names)]
join_lat_lon <- flights_with_names %>%
left_join(airports, by = c("origin" = "faa"))
View(flights)
View(flights)
View(flights)
flights <- flights
delays <- flights %>%
group_by(dest) %>%
summarize(flights_delay = mean(arr_delay))
delays
print(n = Compute the average delay)
which(is.na(flights$arr_delay))
flights[472, 7]
flights[472, 9]
sum(which(is.na(flights$arr_delay)))
sum(is.na(flights$arr_delay))
flights$arr_delay[is.na(flights$arr_delay)] <- 0
flights[472, 9]
delays <- flights %>%
group_by(dest) %>%
summarize(flights_delay = mean(arr_delay))
delays
flights
delays
top_dest_delay <- flights %>%
arrange(desc(arr_delay)) %>%
head()
top_dest_delay
top_dest_delay <- flights %>%
arrange(desc(arr_delay)) %>%
head(n = 5)
top_dest_delay
top_dest_delay %>%
filter(dest == c("HNL", "CMH", "ORD", "SFO", "CVG")) %>%
semi_join(flights)
flights %>%
filter(dest == c("HNL", "CMH", "ORD", "SFO", "CVG")) %>%
semi_join(top_dest_delay)
flights %>%
filter(dest == c("HNL", "CMH", "ORD", "SFO", "CVG")) %>%
left_join(top_dest_delay)
top_dest_delay %>%
filter(dest == c("HNL", "CMH", "ORD", "SFO", "CVG")) %>%
left_join(flights)
top_dest_delay %>%
filter(dest == c("HNL", "CMH", "ORD", "SFO", "CVG")) %>%
semi_join(flights)
top_dest_delay <- semi_join(flights, top_dest_delay, by = "arr_delay")
top_dest_delay
top_dest_delay
flights
top_dest_delay <- semi_join(top_dest_delay,flights,  by = "arr_delay")
top_dest_delay
top_dest_delay <- semi_join(top_dest_delay,flights,  by = "dest")
top_dest_delay
top_dest_delay <- semi_join(flights, top_dest_delay, by = "dest")
top_dest_delay
# jcpd <- read.csv("D:/CU TC/hudk 4050 data mining/HUDK_4050_data_mining_HW/jcpd-calls-for-service.csv")
# path <- paste("D:/CU TC/hudk 4050 data mining/",
#               "HUDK_4050_data_mining_HW/jcpd-calls-for-service.csv",
#               sep = "")
# jcpd <- read.csv(path)
path2 <- paste(getwd(),
"/jcpd-calls-for-service.csv",
sep = "")
# path2 <- "jcpd-calls-for-service.csv"
jcpd <- read.csv(path2)
## 22 variables (columns), 107331 rows
summary(jcpd)
# jcpd[1, ]
head(jcpd)
tail(jcpd)
## num of missing values
sum(is.na(jcpd))
## num of rows with missing values
sum(!complete.cases(jcpd))
## the address of num of columns with missing values
missing <- which(is.na(jcpd))
# so if we have the location, we will use this location to devide the row num.
# we take the floor of deviation, and plus 1, so we can get col.
# since we have 107331 cols, we will use the location devided by 107331 and + 1.
missingCol <- floor(missing / nrow(jcpd)) + 1
missingCol
unique(missingCol)
## the address of num of columns with missing values
missing <- which(is.na(jcpd))
# so if we have the location, we will use this location to devide the row num.
# we take the floor of deviation, and plus 1, so we can get col.
# since we have 107331 cols, we will use the location devided by 107331 and + 1.
# missingCol <- floor(missing / nrow(jcpd)) + 1
missingCol <- floor(missing / 107331) + 1
missingCol
unique(missingCol)
old_name <- colnames(jcpd)
new_name <- gsub("[.]", "_", old_name)
names(jcpd) <- new_name
colnames(jcpd)
# num = ""
# i <- 1
# for(num in jcpd$geo_count) {
#     if(is.na(num)) {
#         jcpd$geo.count[i] = 1
#    }
#    i <- i + 1
# }
# jcpd$geo_count
jcpd$geo_count[is.na(jcpd$geo_count)] <- 1
jcpd$geo_count[is.na(jcpd$geo_count)]
nomissing <- na.omit(jcpd)
nomissing
library(dplyr)
sum(duplicated(jcpd))
jcpd %>%
distinct(.keep_all = TRUE)
library(dplyr)
jcpd %>%
arrange(desc(jcpd$call_type))
jcpd911 <-  jcpd %>%
filter(call_type == 911)
head(jcpd911)
receive <- strftime(jcpd$time_received, "%y-%m-%d %H:%M:%S")
dispatch <- strftime(jcpd$time_dispatched, "%y-%m-%d %H:%M:%S")
new_receive <- strptime(receive, "%y-%m-%d %H:%M:%S")
new_dispatch <- strptime(dispatch, "%y-%m-%d %H:%M:%S")
dispatch_duration <- new_dispatch - new_receive
# dispatch_duration
jcpd <- jcpd %>%
mutate(dispatch_duration)
sum(is.na(jcpd$dispatch_duration))
delete <- which(jcpd$dispatch_duration <= 0)
jcpd <- jcpd[-c(delete), ]
jcpd
mean <- mean(jcpd$dispatch_duration)
mean
unique(jcpd$call_type)
library(dplyr)
# I will use filter to calculate the differnt mean for different call type
# SI <- jcpd %>%
#   filter(call_type == "SI")
# SI_mean <- mean(SI$dispatch_duration)
#
# PH <- jcpd %>%
#   filter(call_type == "PH")
# PH_mean <- mean(PH$dispatch_duration)
#
# C911 <- jcpd %>%
#   filter(call_type == "911")
# mean_911 <- mean(C911$dispatch_duration)
#
# MVS <- jcpd %>%
#   filter(call_type == "MVS")
# MVS_mean <- mean(MVS$dispatch_duration)
#
# STA <- jcpd %>%
#   filter(call_type == "STA")
# STA_mean <- mean(STA$dispatch_duration)
#
# IC <- jcpd %>%
#   filter(call_type == "IC")
# IC_mean <- mean(IC$dispatch_duration)
jcpd %>%
group_by(call_type) %>%
summarize(mean(dispatch_duration))
library(stringr)
sum(str_detect(jcpd$call_code_description, "GUNSHOTS") == TRUE)
jcpd_gunshots_row <- which(str_detect(jcpd$call_code_description, "GUNSHOTS") == TRUE)
jcpd_gunshots <- jcpd[jcpd_gunshots_row, ]
jcpd_gunshots
library(dplyr)
library(ggplot2)
ggplot(jcpd, aes(x = dispatch_duration)) +
geom_histogram(bins = 50, col = "black") +
scale_y_log10() +
xlab("Dispath_Duration") +
ggtitle("Histogram of dispatch_duration")
count <- jcpd %>%
group_by(call_type)
ggplot(count, aes(x = call_type)) +
geom_bar(col = "black")
# jcpd_test %>%
#   group_by(call_type) %>%
#   mutate(freq = )
ggplot(count, aes(x = call_type)) +
geom_bar(aes(y = (..count..) / sum(..count..)))
call_month <- strftime(jcpd$time_received, "%m")
jcpd <- jcpd %>%
mutate(call_month)
# num_call <- jcpd %>%
#   group_by(call_month) %>%
#   summarize()
# ggplot
# ggplot(num_call, aes(x = call_month)) +
#   geom_bar()
# made line 跑不了，只有bar能计算频数
table <- as.data.frame(table(jcpd$call_month))
ggplot(table, aes(x = Var1, y = Freq, group = 1)) +
geom_line() +
xlab("Month") +
ylab("Frequency") +
ggtitle("number of calls by month")
count_sum <- jcpd %>%
group_by(call_type) %>%
summarize(dispatch_duration)
ggplot(count_sum, aes(x = dispatch_duration, y = call_type)) +
geom_boxplot() +
ggtitle("Box plot of dispatch duration by call type")
install.packages("nycflights13")
library("nycflights13")
planes
flights_with_names <- full_join(nycflights13::airlines, nycflights13::flights, by = "carrier")
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("dplyr")
library(ggplot2)
library(dplyr)
library(tidyverse)
library(nycflights13)
count <- jcpd %>%
group_by(call_type)
ggplot(count, aes(x = call_type)) +
geom_bar(col = "black")
install.packages("nycflights13")
library("nycflights13")
planes
flights_with_names <- full_join(nycflights13::airlines, nycflights13::flights, by = "carrier")
flights_with_names
join_lat_lon <- flights_with_names %>%
left_join(airports, by = c("origin" = "faa"))
join_lat_lon
flights <- flights
sum(is.na(flights$arr_delay))
flights$arr_delay[is.na(flights$arr_delay)] <- 0
delays <- flights %>%
group_by(dest) %>%
summarize(flights_delay = mean(arr_delay))
delays
top_dest_delay <- flights %>%
arrange(desc(arr_delay)) %>%
head(n = 5)
top_dest_delay
top_dest_delay <- semi_join(flights, top_dest_delay, by = "dest")
top_dest_delay
getwd()
