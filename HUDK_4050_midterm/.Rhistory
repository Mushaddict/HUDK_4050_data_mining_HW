panduan <- 0
for(i in 1:nrow(math)) {
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
# mathlist = append(mathlist, panduan )
}
}
colnames(progress)
## 把CompleteDevMath 和 CompleteDevEnglish 从后往前排，如果有1就1， 没1就0
mathlist <- c()
math <- progress %>%
select(contains("CompleteDevMath"))
for(i in 2011: 2016) {
progress[paste0("CompleteDevMath_Fall_", i)][is.na(progress[paste0("Complete1_Fall_", i)])] <- -1
progress[paste0("CompleteDevEnglish_Fall_", i)][is.na(progress[paste0("Complete2_Fall_", i)])] <- -1
}
for(i in 2012: 2017) {
progress[paste0("CompleteDevMath_Spring_", i)][is.na(progress[paste0("Complete1_Spring_", i)])] <- -1
progress[paste0("CompleteDevEnglish_Spring_", i)][is.na(progress[paste0("Complete2_Spring_", i)])] <- -1
progress[paste0("CompleteDevMath_Sum_", i)][is.na(progress[paste0("Complete1_Sum_", i)])] <- -1
progress[paste0("CompleteDevEnglish_Sum_", i)][is.na(progress[paste0("Complete2_Sum_", i)])] <- -1
}
panduan <- 0
for(i in 1:nrow(math)) {
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
# mathlist = append(mathlist, panduan )
}
}
mathlist
mathlist <- c()
panduan <- 0
for(i in 1:nrow(math)) {
panduan <- 0
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
# mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
# mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
# mathlist = append(mathlist, panduan )
}
}
for(i in 1:nrow(math)) {
panduan <- 0
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
# mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
# mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
# mathlist = append(mathlist, panduan )
}
}
mathlist <- c()
panduan <- 0
for(i in 1:nrow(math)) {
panduan <- 0
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
# mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
# mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
mathlist = append(mathlist, panduan )
}
}
mathlist
mathlist <- c()
mathlist <- c()
panduan <- 0
for(i in 1:nrow(math)) {
panduan <- 0
for(j in 1:ncol(math)){
if( math[i, j] == 1) {
panduan <- 1
# mathlist = append(mathlist, panduan )
break
} else if(math[i, j] == 0 & j == ncol(train)) {
panduan <- 0
# mathlist = append(mathlist, panduan )
} else if (math[i, j] == 0 ){
panduan <- 0
} else if(math[i, j] == -1 | -2) {
panduan <- 0
}
}
mathlist = append(mathlist, panduan)
}
mathlist
englist <- c()
for(i in 1:nrow(eng)) {
panduan <- 0
for(j in 1:ncol(eng)){
if(eng[i, j] == 1) {
panduan <- 1
break
} else if(eng[i, j] == 0 & j == ncol(eng)) {
panduan <- 0
} else if (eng[i, j] == 0 ){
panduan <- 0
} else if(eng[i, j] == -1 | -2) {
panduan <- 0
}
}
englist = append(englist, panduan)
}
eng <- progress %>%
select(contains("CompleteDevEnglish"))
englist <- c()
for(i in 1:nrow(eng)) {
panduan <- 0
for(j in 1:ncol(eng)){
if(eng[i, j] == 1) {
panduan <- 1
break
} else if(eng[i, j] == 0 & j == ncol(eng)) {
panduan <- 0
} else if (eng[i, j] == 0 ){
panduan <- 0
} else if(eng[i, j] == -1 | -2) {
panduan <- 0
}
}
englist = append(englist, panduan)
}
ennlist
englist
progress <- progress %>%
mutate(Complete_Dev_Math = mathlist,
Complete_Dev_English = englist)
static <- read.csv("Other_files/static_c.csv")
colnames(static)
unique(static$State)
summary(static)
library(tidyverse)
colnames(static)
static_s <- static %>%
select(-c(State, Zip, RegistrationDate))
install.packages("GGally")
library(GGally)
ggcorr(static_s, method = c("everything", "pearson"))
library(ggplot2)
ggpairs(static_s)
colnames(static)
e
exit
;
;;
getwd()
library(tidyverse)
library(dplyr)
############read file
folder_address<-"Student Retention Challenge Data/"
df_label<-read.csv("DropoutTrainLabels.csv")
df_test<-read.csv(paste0(folder_address,"Test Data/TestIDs.csv"))
library(readxl)
df_financial <- read_xlsx(paste0(folder_address,"Student Financial Aid Data/2011-2017_Cohorts_Financial_Aid_and_Fafsa_Data.xlsx"))
###### change colname and prepare for joining
names(df_financial)[1]="StudentID"
df_financial$StudentID <- as.numeric(df_financial$StudentID)
# df_financial$`ID with leading` <- substring(df_financial$`ID with leading`,2,7)
# df_financial$`ID with leading` <- strtoi(df_financial$`ID with leading`)
df_financial
######read static file
static_data <- lapply(Sys.glob(paste0(folder_address,"Student Static Data/*.csv")), read.csv)
#merge static data
df_static<-static_data%>%bind_rows
df_static<-select(df_static,-2:-3)
######read progress file
### Delete static variables & Mark semester and year for variables.
read_sp_file<-function(year,term,filename){
address<-paste("/Users/xuzhen/Desktop/2022 fall/CORE METHDS/midterm/hud4050studentdropoutfall22/Student Retention Challenge Data/Student Progress Data/",filename,sep="")
term_year_SP<-read.csv(address)
term_year_SP<-select(term_year_SP,-2:-5)
for (i in 2:13){
names(term_year_SP)[i]=paste(colnames(term_year_SP)[i],term,year,sep = "_")
}
return(term_year_SP)
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
############read file
## 地址我改了，folder_address我改成了相对路径
folder_address<-"Student Retention Challenge Data/"
df_label<-read.csv("DropoutTrainLabels.csv")
df_test<-read.csv(paste0(folder_address,"Test Data/TestIDs.csv"))
############read file
## 地址我改了，folder_address我改成了相对路径
folder_address<-"Student Retention Challenge Data/"
df_label<-read.csv("DropoutTrainLabels.csv")
df_test<-read.csv(paste0(folder_address,"Test Data/TestIDs.csv"))
library(readxl)
df_financial <- read_xlsx(paste0(folder_address,"Student Financial Aid Data/2011-2017_Cohorts_Financial_Aid_and_Fafsa_Data.xlsx"))
###### change colname and prepare for joining
names(df_financial)[1]="StudentID"
df_financial$StudentID <- as.numeric(df_financial$StudentID)
######read static file
static_data <- lapply(Sys.glob(paste0(folder_address,"Student Static Data/*.csv")), read.csv)
#merge static data
df_static<-static_data%>%bind_rows
df_static<-select(df_static,-2:-3)
############read file
## 地址我改了，folder_address我改成了相对路径
folder_address<-"Student Retention Challenge Data/"
df_label<-read.csv("DropoutTrainLabels.csv")
df_test<-read.csv(paste0(folder_address,"Test Data/TestIDs.csv"))
library(readxl)
df_financial <- read_xlsx(paste0(folder_address,"Student Financial Aid Data/2011-2017_Cohorts_Financial_Aid_and_Fafsa_Data.xlsx"))
###### change colname and prepare for joining
names(df_financial)[1]="StudentID"
df_financial$StudentID <- as.numeric(df_financial$StudentID)
######read static file
static_data <- lapply(Sys.glob(paste0(folder_address,"Student Static Data/*.csv")), read.csv)
#merge static data
df_static<-static_data%>%bind_rows
View(static_data)
## 原来是-2:-3
# df_static<-select(df_static,-2:-3)
df_static <- df_static %>% select(-c(Cohort, CohortTerm))
######read progress file
### Delete static variables & Mark semester and year for variables.
read_sp_file<-function(year,term,filename){
address<-paste("/Users/xuzhen/Desktop/2022 fall/CORE METHDS/midterm/hud4050studentdropoutfall22/Student Retention Challenge Data/Student Progress Data/",filename,sep="")
term_year_SP<-read.csv(address)
term_year_SP<-select(term_year_SP,-2:-5)
for (i in 2:13){
names(term_year_SP)[i]=paste(colnames(term_year_SP)[i],term,year,sep = "_")
}
return(term_year_SP)
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
###### merge training set
df_train<-merge(x=df_label,y=df_financial,by="StudentID",all.x=TRUE)
df_train<-merge(x=df_train,y=df_static,by="StudentID",all.x=TRUE)
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
######read progress file
### Delete static variables & Mark semester and year for variables.
read_sp_file<-function(year,term,filename){
## 改为相对路径
address<-paste("Student Retention Challenge Data/Student Progress Data/",filename,sep="")
term_year_SP<-read.csv(address)
term_year_SP<-select(term_year_SP,-2:-5)
for (i in 2:13){
names(term_year_SP)[i]=paste(colnames(term_year_SP)[i],term,year,sep = "_")
}
return(term_year_SP)
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
###### merge training set
df_train<-merge(x=df_label,y=df_financial,by="StudentID",all.x=TRUE)
df_train<-merge(x=df_train,y=df_static,by="StudentID",all.x=TRUE)
##以时间顺序merge
## 先merge2011 fall
df_train <- merge(x = df_train, y = Fall_2011_SP, by = "StudentID", all.x = TRUE)
## 接着merge2012的spring summer fall
for(i in 2012:2016) {
df_train <- merge(x = df_train, y = get(paste0("Spring_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = get(paste0("Sum_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = get(paste0("Fall_", i, "_SP")), by = "StudentID", all.x = TRUE)
}
## 最后merge2017的Spring和Summer
df_train <- merge(x = df_train, y = Spring_2017_SP, by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = Sum_2017_SP, by = "StudentID", all.x = TRUE)
############read file
## 地址我改了，folder_address我改成了相对路径
folder_address<-"Student Retention Challenge Data/"
df_label<-read.csv("DropoutTrainLabels.csv")
df_test<-read.csv(paste0(folder_address,"Test Data/TestIDs.csv"))
library(readxl)
df_financial <- read_xlsx(paste0(folder_address,"Student Financial Aid Data/2011-2017_Cohorts_Financial_Aid_and_Fafsa_Data.xlsx"))
###### change colname and prepare for joining
names(df_financial)[1]="StudentID"
df_financial$StudentID <- as.numeric(df_financial$StudentID)
######read static file
static_data <- lapply(Sys.glob(paste0(folder_address,"Student Static Data/*.csv")), read.csv)
#merge static data
df_static<-static_data%>%bind_rows
## 原来是-2:-3
# df_static<-select(df_static,-2:-3)
df_static <- df_static %>% select(-c(Cohort, CohortTerm))
######read progress file
### Delete static variables & Mark semester and year for variables.
read_sp_file<-function(year,term,filename){
## 改为相对路径
address<-paste("Student Retention Challenge Data/Student Progress Data/",filename,sep="")
term_year_SP<-read.csv(address)
term_year_SP<-select(term_year_SP,-2:-5)
for (i in 2:13){
names(term_year_SP)[i]=paste(colnames(term_year_SP)[i],term,year,sep = "_")
}
return(term_year_SP)
}
###  read fall
for (i in 2011:2016){
assign(paste("Fall_",i,"_SP",sep=""),read_sp_file(year=i,term="Fall",filename=paste0("Fall ",i,"_SP.csv")))
}
### read spring & summer
for (i in 2012:2017){
assign(paste("Spring_",i,"_SP",sep=""),read_sp_file(year=i,term="Spring",filename=paste0("Spring ",i,"_SP.csv")))
assign(paste("Sum_",i,"_SP",sep=""),read_sp_file(year=i,term="sum",filename=paste0("Sum ",i,".csv")))
}
##############################################################################
##################### merge training set  ####################################
##############################################################################
df_train<-merge(x=df_label,y=df_financial,by="StudentID",all.x=TRUE)
df_train<-merge(x=df_train,y=df_static,by="StudentID",all.x=TRUE)
##以时间顺序merge
## 先merge2011 fall
df_train <- merge(x = df_train, y = Fall_2011_SP, by = "StudentID", all.x = TRUE)
## 接着merge2012的spring summer fall
for(i in 2012:2016) {
df_train <- merge(x = df_train, y = get(paste0("Spring_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = get(paste0("Sum_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = get(paste0("Fall_", i, "_SP")), by = "StudentID", all.x = TRUE)
}
## 最后merge2017的Spring和Summer
df_train <- merge(x = df_train, y = Spring_2017_SP, by = "StudentID", all.x = TRUE)
df_train <- merge(x = df_train, y = Sum_2017_SP, by = "StudentID", all.x = TRUE)
colnames(df_train)
##############################################################################
##################### merge test set #########################################
##############################################################################
df_test<-merge(x=df_test,y=df_financial,by="StudentID",all.x=TRUE)
df_test<-merge(x=df_test,y=df_static,by="StudentID",all.x=TRUE)
## 先merge2011 fall
df_test <- merge(x = df_test, y = Fall_2011_SP, by = "StudentID", all.x = TRUE)
## 接着merge2012的spring summer fall
for(i in 2012:2016) {
df_test <- merge(x = df_test, y = get(paste0("Spring_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_test <- merge(x = df_test, y = get(paste0("Sum_", i, "_SP")), by = "StudentID", all.x = TRUE)
df_test <- merge(x = df_test, y = get(paste0("Fall_", i, "_SP")), by = "StudentID", all.x = TRUE)
}
## 最后merge2017的Spring和Summer
df_test <- merge(x = df_test, y = Spring_2017_SP, by = "StudentID", all.x = TRUE)
df_test <- merge(x = df_test, y = Sum_2017_SP, by = "StudentID", all.x = TRUE)
colnames(df_test)
###### output file
finance_train<-df_train[,1:34]
progress_train<-df_train[,-(5:66)]
static_train<-df_train[,c(1:4,35:66)]
progress_train
finance_test<-df_test[,1:33]
finance_test
progress_test<-df_test[,-(4:65)]
colnames(finance_test)
finance_test<-df_test[,1:33]
colnames(finance_test)
progress_test<-df_test[,-(4:65)]
colnames(progress_test)
static_test<-df_test[,c(1:3,34:65)]
colnames(static_test)
colnames(df_test)
write.csv(progress_test,file="progress_test.csv")
write.csv(finance_test,file="financial_test.csv")
write.csv(static_test,file="static_test.csv")
write.csv(progress_train,file="progress_train.csv")
write.csv(finance_train,file="financial_train.csv")
write.csv(static_train,file="static_train.csv")
## read sample submission file
dropoutLabel <- read.csv("DropoutTrainLabels.csv")
## read financial aid file
financial_data <- read_excel("Student Retention Challenge Data/Student Financial Aid Data/2011-2017_Cohorts_Financial_Aid_and_Fafsa_Data.xlsx")
## change financial data name [1] to "StudentID"
names(financial_data)[1] = "StudentID"
## Financial Data中studentID是character，需要转成numeric
financial_data$StudentID <- as.numeric(financial_data$StudentID)
## read static data
static_data <- lapply(Sys.glob("Student Retention Challenge Data/Student Static Data/*.csv"), read.csv)
static_data <- static_data %>% bind_rows()
## delete cohort and cohort terms
static_data <- static_data %>% select(-c(Cohort, CohortTerm))
## read progress data
read_sp_file <- function(year, term, filename) {
address <- paste("Student Retention Challenge Data/Student Progress Data/", filename, sep = "")
term_year_SP <- read.csv(address)
## delete Cohort, CohortTerm, Term, and Academic Year
term_year_SP <- term_year_SP %>%
select(-c(Cohort, CohortTerm, Term, AcademicYear))
## 把每个变量名标准化，都改成_Term_Year
for (i in 2:13) {
names(term_year_SP)[i] = paste(colnames(term_year_SP)[i], term, year, sep = "_")
}
return(term_year_SP)
}
## read fall
for (i in 2011:2016) {
assign(paste("Fall_", i, "_SP", sep = ""),
read_sp_file(year = i, term = "Fall", filename = paste0("Fall ", i, "_SP.csv")))
}
## read spring and summer
for (i in 2012:2017) {
assign(paste("Spring_", i, "_SP", sep = ""),
read_sp_file(year = i, term = "Spring", filename = paste0("Spring ", i, "_SP.csv")))
assign(paste("Sum_", i, "_SP", sep = ""),
read_sp_file(year = i, term = "Sum", filename = paste0("Sum ", i, ".csv")))
}
## merge
train <- merge(x = dropoutLabel, y = financial_data, by = "StudentID", all.x = TRUE)
train <- merge(x = train, y = static_data, by = "StudentID", all.x = TRUE)
#### merge以学期为单位
# for(i in 2011:2016) {
#   train <- merge(x = train, y = get(paste0("Fall_", i, "_SP")),
#              by = "StudentID", all.x = TRUE)
# }
# for (i in 2012:2017) {
#   train <- merge(x = train, y = get(paste0("Spring_", i, "_SP")), by = "StudentID", all.x = TRUE)
# }
# for (i in 2012:2017) {
#   train <- merge(x = train, y = get(paste0("Sum_", i, "_SP")), by = "StudentID", all.x = TRUE)
# }
### merge以年为单位
## 先merge2011 Fall
train <- merge(x = train, y = Fall_2011_SP, by = "StudentID", all.x = T)
## merge 2012:2016
for(i in 2012:2016) {
train <- merge(x = train, y = get(paste0("Spring_", i, "_SP")), by = "StudentID", all.x = TRUE)
train <- merge(x = train, y = get(paste0("Sum_", i, "_SP")), by = "StudentID", all.x = TRUE)
train <- merge(x = train, y = get(paste0("Fall_", i, "_SP")), by = "StudentID", all.x = TRUE)
}
## merge 2017 Sptring, Summer
train <- merge(x = train, y = Spring_2017_SP, by = "StudentID", all.x = T)
train <- merge(x = train, y = Sum_2017_SP, by = "StudentID", all.x = T)
progress <- train[, -(5:66)]
getwd()
